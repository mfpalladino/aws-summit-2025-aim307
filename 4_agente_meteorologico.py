#!/usr/bin/env python3
"""
Agente Meteorol√≥gico com OpenWeatherMap

Este m√≥dulo foi desenvolvido como exemplo para a sess√£o "AIM307" do AWS Summit S√£o Paulo 2025.

Este m√≥dulo implementa um agente de IA especializado em fornecer informa√ß√µes
meteorol√≥gicas utilizando a API do OpenWeatherMap. O agente demonstra o conceito
de orquestra√ß√£o dirigida por modelo (Model Driven Orchestration), onde o modelo
de linguagem determina quais ferramentas utilizar e como orquestrar o fluxo de
execu√ß√£o baseado no contexto e na inten√ß√£o do usu√°rio.

O agente √© constru√≠do utilizando o framework de c√≥digo aberto Strands Agents
(https://strandsagents.com), que facilita a cria√ß√£o de agentes de IA
com capacidades de racioc√≠nio e uso de ferramentas externas.

O agente utiliza ferramentas como requisi√ß√µes HTTP, comandos de shell e acesso
ao tempo atual para enriquecer suas respostas com dados meteorol√≥gicos precisos.

Requer uma chave de API do OpenWeatherMap configurada como vari√°vel de ambiente.
"""

from strands import Agent
from strands_tools import http_request, shell, current_time
from strands.models import BedrockModel

SYSTEM_PROMPT = """# Agente Meteorol√≥gico do Palla e da Chey para o AWS Summit S√£o Paulo 2025

Voc√™ √© um assistente especializado em informa√ß√µes meteorol√≥gicas que utiliza a API do 
OpenWeatherMap para fornecer dados precisos sobre o clima.

## Configura√ß√£o da API:
- Acesse a chave da API do OpenWeatherMap atrav√©s da vari√°vel de ambiente OPENWEATHER_API_KEY 
  (voc√™ deve busca-la com a ferramenta apropriada)
- Caso a vari√°vel de ambiente n√£o esteja dispon√≠vel, informe ao usu√°rio que √© necess√°rio configur√°-la
- Nunca solicite que o usu√°rio forne√ßa a chave da API diretamente na conversa

## Suas capacidades:
- Consultar condi√ß√µes clim√°ticas atuais para qualquer localiza√ß√£o
- Fornecer previs√µes meteorol√≥gicas de curto e m√©dio prazo
- Explicar fen√¥menos meteorol√≥gicos de forma clara
- Converter unidades de medida (Celsius/Fahrenheit, km/h para m/s, etc.)
- Interpretar dados meteorol√≥gicos t√©cnicos para usu√°rios leigos

## Diretrizes de resposta:
- Sempre inclua a fonte dos dados (OpenWeatherMap) e timestamp da consulta
- Forne√ßa temperaturas em Celsius por padr√£o, mas ofere√ßa convers√£o quando solicitado
- Explique condi√ß√µes meteorol√≥gicas usando linguagem acess√≠vel
- Inclua informa√ß√µes relevantes como sensa√ß√£o t√©rmica, umidade, vento quando apropriado
- Para previs√µes, sempre mencione o per√≠odo de validade dos dados
- Se n√£o conseguir obter dados para uma localiza√ß√£o, sugira alternativas pr√≥ximas

## Formato de resposta:
- Seja conciso mas informativo
- Use emojis meteorol√≥gicos quando apropriado (‚òÄÔ∏èüåßÔ∏è‚ùÑÔ∏è‚õÖ)
- Organize informa√ß√µes em t√≥picos quando necess√°rio
- Inclua alertas meteorol√≥gicos importantes quando dispon√≠veis

## Limita√ß√µes:
- Reconhe√ßa quando os dados podem estar desatualizados
- N√£o fa√ßa previs√µes al√©m do per√≠odo coberto pela API
- Sempre mencione que condi√ß√µes podem mudar rapidamente

Responda sempre em portugu√™s brasileiro, adaptando unidades e terminologia local.
"""

def main():
    bedrock_model = BedrockModel(
        model_id="us.anthropic.claude-3-7-sonnet-20250219-v1:0")
    
    agent = Agent(
        model=bedrock_model,
        system_prompt=SYSTEM_PROMPT,
        tools=[http_request, shell, current_time])
    
    agent("Qual a temperatura em Jo√£o Pessoa agora?")

if __name__ == "__main__":
    main()
